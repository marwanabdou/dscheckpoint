var array1=[12, 13, 6, 10]
var array2=[13, 10, 16, 15]


//using forEach to iterate through the array
sum1 = 0 
array1.forEach(element => {
    if (array2.includes(element)){
    sum1 += element
}});

array2.forEach(element => {
    if (array1.includes(element)){
    sum1 += element
}});
 console.log(sum1);

 class HashTable {
    constructor(size = 7) {
        // build an empty hash table with 7 items in it
        this.dataMap = new Array(size) //datamap is the address space //
  
    }
    // _hash func to generate a random address //
  
    _hash(key) {
        let hash = 0
        for (let i = 0; i < key.length; i++) {
            hash = (hash + key.charCodeAt(i) * 23) % this.dataMap.length
        }
        return hash
    }
    set(key, value) {
        let index = this._hash(key)
        if (!this.dataMap[index]) {
            this.dataMap[index] = []
  
        }
        this.dataMap[index].push([key, value])
        return this
  
    }
  
    get(key) {
        let index = this._hash(key)
        if (this.dataMap[index]) {
            for (let i = 0; i < this.dataMap[index].length; i++) {
                if (this.dataMap[index][i][0] === key) {
                    return this.dataMap[index][i][1]
                }
  
            }
  
  
        }
        return undefined
  
    }
  
  
  }
  
  /*The charCodeAt() method returns an integer between 0 and 65535 representing
  the UTF-16 code unit at the given index. */
  // const sentence = 'The quick brown fox jumps over the lazy dog.';
  // const index = 5;
  // console.log(sentence.charCodeAt(index))
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt
  
var ht = new HashTable();
let joined = array1.concat(array2)
const count = {}
console.log(joined);

joined.forEach(element =>{
  count[element] = (count[element] || 0) + 1
})
console.log(count);

let key;
 let sum = 0
for(key in (count)){
  value=count[key]
  ht.set(key, value)
  if (ht.get(key) === 2){
    sum += Number(key) * value
    
  
  };
}
console.log(sum);

   
